name: Release Pipeline
# credit to mc-modpack-kit for the template
on:
  push:
    branches:
      - main
env:
  pack-file: "pack.toml"
  default-release-modrinth: "true"
  name: 'Create: Prepare to Dye'
  modrinth-url: 'https://modrinth.com/modpack/create-prepare-to-dye'

jobs:
  release:
    strategy:
      matrix:
        include:
          - platform: modrinth
            file_suffix: mrpack
          - platform: curseforge 
            file_suffix: zip
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          tag_prefix: ''
          custom_release_rules: feat:minor:Features,fix:patch:Fixes,revert:patch:Reverted Changes,docs:patch:Documentation and Localization,test:patch:Tests and testing related changes,mods:patch:Modlist related changes,ci:patch:Continuous Integration
          github_token: ${{ secrets.GH_TOKEN }}

      - name: Install packwiz
        uses: supplypike/setup-bin@v3
        with:
          uri: "https://nightly.link/packwiz/packwiz/workflows/go/main/Linux%2064-bit%20x86.zip"
          name: "packwiz"
          version: "linux"

      - name: Build args
        id: build_args
        run: echo 'name=${{ steps.tag_version.outputs.new_tag }} - ${{ env.name }} [forge][${{ matrix.platform }}]' >> $GITHUB_OUTPUT
      - name: Build Modpack
        run: packwiz ${{ matrix.platform }} export --output "${{ steps.build_args.outputs.name }}.${{ matrix.file_suffix }}"
      - name: Create a GitHub release
        if: matrix.platform == 'modrinth'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}   download from modrinth ${{ env.modrinth-url }}
          token: ${{ secrets.GH_TOKEN }}
          artifacts: |
            *.mrpack
      - name: Upload CurseForge Modpack to GitHub Releases
        if: matrix.platform == 'curseforge'
        run: |
          gh release upload ${{ steps.tag_version.outputs.new_tag }} *.zip \
            --repo ${{ github.repository_owner }}/${{ github.event.repository.name }} \
            --clobber
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Publish to Modrinth
        if: matrix.platform == 'modrinth'
        uses: Kir-Antipov/mc-publish@v3.2
        with:
          modrinth-id: ${{ vars.MODRINTH_ID }}
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          loaders: forge
          game-versions: 1.19.2
          changelog: ${{ steps.tag_version.outputs.changelog }}
          files: "*.mrpack"
          version: ${{ steps.tag_version.outputs.new_tag }}
          version-type: release
          name: ${{ steps.build_args.outputs.name }}
      - name: Update modrinth description to match reademe
        if: matrix.platform == 'modrinth'
        run: |
          curl -X PATCH \
            -H "Authorization: ${{ secrets.MODRINTH_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d "$(cat README.md | jq -R -s '{body: .}')" \
            https://api.modrinth.com/v2/project/${{ vars.MODRINTH_ID }}
      - name: Publish to CurseForge
        if: matrix.platform == 'curseforge'
        uses: Kir-Antipov/mc-publish@v3.2
        with:
          curseforge-id: ${{ vars.CF_ID }}
          curseforge-token: ${{ secrets.CF_API_TOKEN }}
          loaders: forge
          game-versions: 1.19.2
          changelog: ${{ steps.tag_version.outputs.changelog }}
          files: "*.zip"
          version: ${{ steps.tag_version.outputs.new_tag }}
          version-type: release